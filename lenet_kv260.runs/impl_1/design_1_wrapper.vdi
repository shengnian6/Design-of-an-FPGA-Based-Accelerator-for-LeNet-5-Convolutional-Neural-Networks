#-----------------------------------------------------------
# Vivado v2022.2 (64-bit)
# SW Build 3671981 on Fri Oct 14 05:00:03 MDT 2022
# IP Build 3669848 on Fri Oct 14 08:30:02 MDT 2022
# Start of session at: Sun Jul 14 23:24:09 2024
# Process ID: 3564
# Current directory: C:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.runs/impl_1
# Command line: vivado.exe -log design_1_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace
# Log file: C:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.runs/impl_1/design_1_wrapper.vdi
# Journal file: C:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.runs/impl_1\vivado.jou
# Running On: Zhengzb-ThinkPad, OS: Windows, CPU Frequency: 2419 MHz, CPU Physical cores: 4, Host memory: 16885 MB
#-----------------------------------------------------------
source design_1_wrapper.tcl -notrace
create_project: Time (s): cpu = 00:00:06 ; elapsed = 00:00:06 . Memory (MB): peak = 1389.273 ; gain = 117.039
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/Users/zhengzb/Desktop/project/zcu104/ip_repo'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'F:/Xilinx/Vivado/2022.2/data/ip'.
Command: link_design -top design_1_wrapper -part xck26-sfvc784-2LV-c
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xck26-sfvc784-2LV-c
Netlist sorting complete. Time (s): cpu = 00:00:01 ; elapsed = 00:00:01 . Memory (MB): peak = 2492.820 ; gain = 1.926
INFO: [Netlist 29-17] Analyzing 1225 Unisim elements for replacement
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[0]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[10]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[11]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[12]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[13]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[14]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[15]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[16]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[17]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[18]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[19]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[1]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[20]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[21]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[22]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[23]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[24]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[25]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[26]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[27]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[28]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[29]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[2]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[30]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[31]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[3]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[4]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[5]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[6]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[7]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[8]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
CRITICAL WARNING: [Netlist 29-358] Reg 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/Read_BASE_ADDR_reg[9]' of type 'FDCPE' cannot be timed accurately. Hardware behavior may be unpredictable. Use check_timing command for more information. [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ipshared/df45/src/dataFIFO.v:88]
Resolution: Recode your design, so that you do not depend on both asynchronous set and reset for your desired functionality.
Convert at least one of them to synchronous signal, or get rid of at least one of those.
Often, the use of "initial" value will help you get rid of one of the asynchronous set/reset signals.
INFO: [Netlist 29-28] Unisim Transformation completed in 9 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2022.2
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.xdc] for cell 'design_1_i/zynq_ultra_ps_e_0/inst'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.xdc] for cell 'design_1_i/zynq_ultra_ps_e_0/inst'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_DMA_Controller_0_0/src/fifo_dataout/fifo_dataout.xdc] for cell 'design_1_i/DMA_Controller_0/inst/inst_OutputFIFO/dout_fifo/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_DMA_Controller_0_0/src/fifo_dataout/fifo_dataout.xdc] for cell 'design_1_i/DMA_Controller_0/inst/inst_OutputFIFO/dout_fifo/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_DMA_Controller_0_0/src/fifo_data/fifo_data.xdc] for cell 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/din_fifo/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_DMA_Controller_0_0/src/fifo_data/fifo_data.xdc] for cell 'design_1_i/DMA_Controller_0/inst/inst_dataFIFO/din_fifo/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_FClayer/fifo_FClayer.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_FC_layer/inst_fifo_FClayer/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_FClayer/fifo_FClayer.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_FC_layer/inst_fifo_FClayer/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/Data_Correct0/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/Data_Correct0/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/Data_Correct0/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/Data_Correct0/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/Data_Correct0/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/Data_Correct0/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/Data_Correct0/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/Data_Correct0/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/Data_Correct0/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/Data_Correct0/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/Data_Correct0/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/Data_Correct0/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/Data_Correct0/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/Data_Correct0/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/Data_Correct0/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/Data_Correct0/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[0].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[0].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[1].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[1].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[2].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[2].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[3].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[3].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[4].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[4].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[5].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[5].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[6].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[6].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[7].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_Accelerator_0_0/src/fifo_generator_0/fifo_generator_0.xdc] for cell 'design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[7].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_99M_0/design_1_rst_ps8_0_99M_0_board.xdc] for cell 'design_1_i/rst_ps8_0_99M/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_99M_0/design_1_rst_ps8_0_99M_0_board.xdc] for cell 'design_1_i/rst_ps8_0_99M/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_99M_0/design_1_rst_ps8_0_99M_0.xdc] for cell 'design_1_i/rst_ps8_0_99M/U0'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_99M_0/design_1_rst_ps8_0_99M_0.xdc] for cell 'design_1_i/rst_ps8_0_99M/U0'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0_clocks.xdc] for cell 'design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0_clocks.xdc] for cell 'design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_interconnect_0/s00_couplers/auto_us/inst'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_interconnect_0/s00_couplers/auto_us/inst'
Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1_clocks.xdc] for cell 'design_1_i/axi_interconnect_0/s01_couplers/auto_us/inst'
Finished Parsing XDC File [c:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.gen/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1_clocks.xdc] for cell 'design_1_i/axi_interconnect_0/s01_couplers/auto_us/inst'
INFO: [Project 1-1714] 3 XPM XDC files have been applied to the design.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.022 . Memory (MB): peak = 2741.480 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 119 instances were transformed.
  DSP48E2 => DSP48E2 (DSP_ALU, DSP_A_B_DATA, DSP_C_DATA, DSP_MULTIPLIER, DSP_M_DATA, DSP_OUTPUT, DSP_PREADD, DSP_PREADD_DATA): 80 instances
  FDCPE => FDCPE (FDCE, FDPE, LDCE, LUT3, VCC): 32 instances
  RAM32M16 => RAM32M16 (RAMD32(x14), RAMS32(x2)): 5 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 2 instances

11 Infos, 0 Warnings, 32 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:35 ; elapsed = 00:00:38 . Memory (MB): peak = 2741.480 ; gain = 1269.027
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xck26'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xck26'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 2757.473 ; gain = 15.992

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 0dca7396

Time (s): cpu = 00:00:13 ; elapsed = 00:00:08 . Memory (MB): peak = 3087.332 ; gain = 329.859

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-1287] Pulled Inverter design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/Data_Correct0/dout_cnt[9]_i_1 into driver instance design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/Data_Correct0/fifo0_i_22, which resulted in an inversion of 8 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/Data_Correct0/dout_cnt[9]_i_1__0 into driver instance design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/Data_Correct0/fifo0_i_22__0, which resulted in an inversion of 8 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/Data_Correct0/dout_cnt[9]_i_1__1 into driver instance design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/Data_Correct0/fifo0_i_22__1, which resulted in an inversion of 8 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/Data_Correct0/dout_cnt[9]_i_1__2 into driver instance design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/Data_Correct0/fifo0_i_22__2, which resulted in an inversion of 8 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/Data_Correct0/dout_cnt[9]_i_1__3 into driver instance design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/Data_Correct0/fifo0_i_22__3, which resulted in an inversion of 8 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[0].inst_bram_layer2_1_i_1 into driver instance design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[0].inst_bram_layer2_1_i_2, which resulted in an inversion of 20 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.USE_SPLIT.write_resp_inst/first_mi_word_i_2 into driver instance design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.USE_SPLIT.write_resp_inst/s_axi_bvalid_INST_0_i_1, which resulted in an inversion of 5 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/ps8_0_axi_periph/s00_couplers/auto_pc/inst/gen_axilite.gen_b2s_conv.axilite_b2s/SI_REG/ar.ar_pipe/axaddr_offset_r[1]_i_1__0 into driver instance design_1_i/ps8_0_axi_periph/s00_couplers/auto_pc/inst/gen_axilite.gen_b2s_conv.axilite_b2s/SI_REG/ar.ar_pipe/axaddr_offset_r[1]_i_2__0, which resulted in an inversion of 7 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/ps8_0_axi_periph/s00_couplers/auto_pc/inst/gen_axilite.gen_b2s_conv.axilite_b2s/SI_REG/aw.aw_pipe/axaddr_offset_r[1]_i_1 into driver instance design_1_i/ps8_0_axi_periph/s00_couplers/auto_pc/inst/gen_axilite.gen_b2s_conv.axilite_b2s/SI_REG/aw.aw_pipe/axaddr_offset_r[1]_i_2, which resulted in an inversion of 7 pins
INFO: [Opt 31-138] Pushed 18 inverter(s) to 7385 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 12b3f8e45

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 3437.379 ; gain = 0.000
INFO: [Opt 31-389] Phase Retarget created 4 cells and removed 471 cells
INFO: [Opt 31-1021] In phase Retarget, 67 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 2 Constant propagation | Checksum: 9675959d

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 3437.379 ; gain = 0.000
INFO: [Opt 31-389] Phase Constant propagation created 1 cells and removed 2 cells
INFO: [Opt 31-1021] In phase Constant propagation, 67 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Sweep
Phase 3 Sweep | Checksum: 89ee0e28

Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 3437.379 ; gain = 0.000
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 41 cells
INFO: [Opt 31-1021] In phase Sweep, 297 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
INFO: [Opt 31-1077] Phase BUFG optimization inserted 0 global clock buffer(s) for CLOCK_LOW_FANOUT.
Phase 4 BUFG optimization | Checksum: 89ee0e28

Time (s): cpu = 00:00:09 ; elapsed = 00:00:06 . Memory (MB): peak = 3437.379 ; gain = 0.000
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 7de26d08

Time (s): cpu = 00:00:09 ; elapsed = 00:00:06 . Memory (MB): peak = 3437.379 ; gain = 0.000
INFO: [Opt 31-389] Phase Shift Register Optimization created 120 cells and removed 360 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: deec4722

Time (s): cpu = 00:00:09 ; elapsed = 00:00:06 . Memory (MB): peak = 3437.379 ; gain = 0.000
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 111 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |               4  |             471  |                                             67  |
|  Constant propagation         |               1  |               2  |                                             67  |
|  Sweep                        |               0  |              41  |                                            297  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |             120  |             360  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                            111  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.074 . Memory (MB): peak = 3437.379 ; gain = 0.000
Ending Logic Optimization Task | Checksum: 133441454

Time (s): cpu = 00:00:11 ; elapsed = 00:00:08 . Memory (MB): peak = 3437.379 ; gain = 0.000

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 18 BRAM(s) out of a total of 46 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 1 newly gated: 6 Total Ports: 92
Ending PowerOpt Patch Enables Task | Checksum: 8750dd37

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.421 . Memory (MB): peak = 4177.285 ; gain = 0.000
Ending Power Optimization Task | Checksum: 8750dd37

Time (s): cpu = 00:00:36 ; elapsed = 00:00:25 . Memory (MB): peak = 4177.285 ; gain = 739.906

Starting Final Cleanup Task

Starting Logic Optimization Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Logic Optimization Task | Checksum: fbb6e551

Time (s): cpu = 00:00:12 ; elapsed = 00:00:07 . Memory (MB): peak = 4177.285 ; gain = 0.000
Ending Final Cleanup Task | Checksum: fbb6e551

Time (s): cpu = 00:00:15 ; elapsed = 00:00:10 . Memory (MB): peak = 4177.285 ; gain = 0.000

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.020 . Memory (MB): peak = 4177.285 ; gain = 0.000
Ending Netlist Obfuscation Task | Checksum: fbb6e551

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.026 . Memory (MB): peak = 4177.285 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
48 Infos, 0 Warnings, 32 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:01:21 ; elapsed = 00:00:58 . Memory (MB): peak = 4177.285 ; gain = 1435.805
INFO: [Timing 38-480] Writing timing data to binary archive.
INFO: [Common 17-1381] The checkpoint 'C:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:10 ; elapsed = 00:00:07 . Memory (MB): peak = 4177.285 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file C:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:44 ; elapsed = 00:00:36 . Memory (MB): peak = 5044.266 ; gain = 866.980
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xck26'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xck26'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.022 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 2d90898b

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.045 . Memory (MB): peak = 5044.266 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.023 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 77c5e88e

Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 154b95ebe

Time (s): cpu = 00:00:16 ; elapsed = 00:00:11 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 154b95ebe

Time (s): cpu = 00:00:16 ; elapsed = 00:00:11 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 1 Placer Initialization | Checksum: 154b95ebe

Time (s): cpu = 00:00:16 ; elapsed = 00:00:11 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 2 Global Placement

Phase 2.1 Floorplanning

Phase 2.1.1 Partition Driven Placement

Phase 2.1.1.1 PBP: Partition Driven Placement
Phase 2.1.1.1 PBP: Partition Driven Placement | Checksum: f81079ba

Time (s): cpu = 00:00:27 ; elapsed = 00:00:18 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 2.1.1.2 PBP: Clock Region Placement
Phase 2.1.1.2 PBP: Clock Region Placement | Checksum: 136c52572

Time (s): cpu = 00:00:27 ; elapsed = 00:00:18 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 2.1.1.3 PBP: Compute Congestion
Phase 2.1.1.3 PBP: Compute Congestion | Checksum: 136c52572

Time (s): cpu = 00:00:28 ; elapsed = 00:00:19 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 2.1.1.4 PBP: UpdateTiming
Phase 2.1.1.4 PBP: UpdateTiming | Checksum: 16016e817

Time (s): cpu = 00:00:30 ; elapsed = 00:00:20 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 2.1.1.5 PBP: Add part constraints
Phase 2.1.1.5 PBP: Add part constraints | Checksum: 16016e817

Time (s): cpu = 00:00:30 ; elapsed = 00:00:20 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 2.1.1 Partition Driven Placement | Checksum: 16016e817

Time (s): cpu = 00:00:30 ; elapsed = 00:00:20 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 2.1 Floorplanning | Checksum: d0e90b6a

Time (s): cpu = 00:00:30 ; elapsed = 00:00:20 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: d0e90b6a

Time (s): cpu = 00:00:30 ; elapsed = 00:00:20 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 2.3 Post-Processing in Floorplanning
Phase 2.3 Post-Processing in Floorplanning | Checksum: d0e90b6a

Time (s): cpu = 00:00:30 ; elapsed = 00:00:20 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 2.4 Global Placement Core

Phase 2.4.1 UpdateTiming Before Physical Synthesis
Phase 2.4.1 UpdateTiming Before Physical Synthesis | Checksum: 23663563a

Time (s): cpu = 00:00:58 ; elapsed = 00:00:37 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 2.4.2 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 0 LUTNM shape to break, 967 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 0, two critical 0, total 0, new lutff created 0
INFO: [Physopt 32-1138] End 1 Pass. Optimized 431 nets or LUTs. Breaked 0 LUT, combined 431 existing LUTs and moved 0 existing LUT
INFO: [Physopt 32-1030] Pass 1. Identified 2 candidate driver sets for equivalent driver rewiring.
INFO: [Physopt 32-661] Optimized 2 nets.  Re-placed 17 instances.
INFO: [Physopt 32-775] End 1 Pass. Optimized 2 nets or cells. Created 0 new cell, deleted 0 existing cell and moved 17 existing cells
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.077 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register to Pipeline Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  URAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for dynamic/static region interface net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.020 . Memory (MB): peak = 5044.266 ; gain = 0.000

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |            431  |                   431  |           0  |           1  |  00:00:00  |
|  Retime                                           |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Equivalent Driver Rewiring                       |            0  |              0  |                     2  |           0  |           1  |  00:00:00  |
|  Very High Fanout                                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |            0  |            431  |                   433  |           0  |           5  |  00:00:01  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.4.2 Physical Synthesis In Placer | Checksum: 23c7c9cb8

Time (s): cpu = 00:01:02 ; elapsed = 00:00:41 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 2.4 Global Placement Core | Checksum: 17f0e75dc

Time (s): cpu = 00:01:05 ; elapsed = 00:00:42 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 2 Global Placement | Checksum: 17f0e75dc

Time (s): cpu = 00:01:05 ; elapsed = 00:00:42 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 16c09f430

Time (s): cpu = 00:01:07 ; elapsed = 00:00:44 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 19ea89e8c

Time (s): cpu = 00:01:10 ; elapsed = 00:00:46 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 3.3 Small Shape DP

Phase 3.3.1 Small Shape Clustering
Phase 3.3.1 Small Shape Clustering | Checksum: 1944789ad

Time (s): cpu = 00:01:12 ; elapsed = 00:00:47 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 3.3.2 Flow Legalize Slice Clusters
Phase 3.3.2 Flow Legalize Slice Clusters | Checksum: 1f8f82b41

Time (s): cpu = 00:01:12 ; elapsed = 00:00:48 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 3.3.3 Slice Area Swap

Phase 3.3.3.1 Slice Area Swap Initial
Phase 3.3.3.1 Slice Area Swap Initial | Checksum: 186a4020f

Time (s): cpu = 00:01:13 ; elapsed = 00:00:49 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 3.3.3 Slice Area Swap | Checksum: 186a4020f

Time (s): cpu = 00:01:13 ; elapsed = 00:00:49 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 3.3 Small Shape DP | Checksum: 1c768c9df

Time (s): cpu = 00:01:19 ; elapsed = 00:00:52 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 3.4 Re-assign LUT pins
Phase 3.4 Re-assign LUT pins | Checksum: 18be3c506

Time (s): cpu = 00:01:20 ; elapsed = 00:00:54 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 3.5 Pipeline Register Optimization
Phase 3.5 Pipeline Register Optimization | Checksum: 148875303

Time (s): cpu = 00:01:21 ; elapsed = 00:00:54 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 3 Detail Placement | Checksum: 148875303

Time (s): cpu = 00:01:21 ; elapsed = 00:00:55 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 15566e49a

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 2 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=3.588 | TNS=0.000 |
Phase 1 Physical Synthesis Initialization | Checksum: 19b0e66d6

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.922 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [Place 46-35] Processed net design_1_i/rst_ps8_0_99M/U0/peripheral_aresetn[0], inserted BUFG to drive 7113 loads.
INFO: [Place 46-45] Replicated bufg driver design_1_i/rst_ps8_0_99M/U0/ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N_replica
INFO: [Place 46-56] BUFG insertion identified 1 candidate nets. Inserted BUFG: 1, Replicated BUFG Driver: 1, Skipped due to Placement/Routing Conflicts: 0, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Ending Physical Synthesis Task | Checksum: 10b47a49d

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 4.1.1.1 BUFG Insertion | Checksum: 10f1fc219

Time (s): cpu = 00:01:46 ; elapsed = 00:01:13 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 4.1.1.2 Post Placement Timing Optimization
INFO: [Place 30-746] Post Placement Timing Summary WNS=3.588. For the most accurate timing information please run report_timing.
Phase 4.1.1.2 Post Placement Timing Optimization | Checksum: 7b73c838

Time (s): cpu = 00:01:46 ; elapsed = 00:01:14 . Memory (MB): peak = 5044.266 ; gain = 0.000

Time (s): cpu = 00:01:46 ; elapsed = 00:01:14 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 4.1 Post Commit Optimization | Checksum: 7b73c838

Time (s): cpu = 00:01:46 ; elapsed = 00:01:14 . Memory (MB): peak = 5044.266 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.230 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 1625b685d

Time (s): cpu = 00:01:50 ; elapsed = 00:01:17 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ________________________________________________________________________
|           | Global Congestion | Long Congestion   | Short Congestion  |
| Direction | Region Size       | Region Size       | Region Size       |
|___________|___________________|___________________|___________________|
|      North|                1x1|                1x1|                1x1|
|___________|___________________|___________________|___________________|
|      South|                1x1|                1x1|                2x2|
|___________|___________________|___________________|___________________|
|       East|                1x1|                1x1|                2x2|
|___________|___________________|___________________|___________________|
|       West|                1x1|                1x1|                2x2|
|___________|___________________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: 1625b685d

Time (s): cpu = 00:01:50 ; elapsed = 00:01:18 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 4.3 Placer Reporting | Checksum: 1625b685d

Time (s): cpu = 00:01:50 ; elapsed = 00:01:18 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.022 . Memory (MB): peak = 5044.266 ; gain = 0.000

Time (s): cpu = 00:01:50 ; elapsed = 00:01:18 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 20b76611c

Time (s): cpu = 00:01:50 ; elapsed = 00:01:18 . Memory (MB): peak = 5044.266 ; gain = 0.000
Ending Placer Task | Checksum: 1e27ea15f

Time (s): cpu = 00:01:51 ; elapsed = 00:01:18 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
88 Infos, 0 Warnings, 32 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:01:57 ; elapsed = 00:01:21 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:13 ; elapsed = 00:00:05 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:20 ; elapsed = 00:00:11 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.086 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.062 . Memory (MB): peak = 5044.266 ; gain = 0.000
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xck26'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xck26'

Starting Initial Update Timing Task

Time (s): cpu = 00:00:14 ; elapsed = 00:00:08 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
97 Infos, 0 Warnings, 32 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
phys_opt_design: Time (s): cpu = 00:00:14 ; elapsed = 00:00:08 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:13 ; elapsed = 00:00:05 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.runs/impl_1/design_1_wrapper_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:18 ; elapsed = 00:00:09 . Memory (MB): peak = 5044.266 ; gain = 0.000
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xck26'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xck26'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs

Phase 1 Build RT Design
Checksum: PlaceDB: 743ce8f ConstDB: 0 ShapeSum: f45332ab RouteDB: e6e7a025
Nodegraph reading from file.  Time (s): cpu = 00:00:01 ; elapsed = 00:00:01 . Memory (MB): peak = 5044.266 ; gain = 0.000
Post Restoration Checksum: NetGraph: 9744f9c1 NumContArr: 3be943b6 Constraints: 50ede81b Timing: 0
Phase 1 Build RT Design | Checksum: 1241c2592

Time (s): cpu = 00:00:15 ; elapsed = 00:00:11 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 2 Router Initialization

Phase 2.1 Fix Topology Constraints
Phase 2.1 Fix Topology Constraints | Checksum: 1241c2592

Time (s): cpu = 00:00:15 ; elapsed = 00:00:11 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 2.2 Pre Route Cleanup
Phase 2.2 Pre Route Cleanup | Checksum: 1241c2592

Time (s): cpu = 00:00:15 ; elapsed = 00:00:11 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 2.3 Global Clock Net Routing
 Number of Nodes with overlaps = 0
Phase 2.3 Global Clock Net Routing | Checksum: 1515d3d33

Time (s): cpu = 00:00:17 ; elapsed = 00:00:13 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 187536c06

Time (s): cpu = 00:00:24 ; elapsed = 00:00:17 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [Route 35-416] Intermediate Timing Summary | WNS=3.668  | TNS=0.000  | WHS=-0.064 | THS=-13.542|


Router Utilization Summary
  Global Vertical Routing Utilization    = 0.00338404 %
  Global Horizontal Routing Utilization  = 0.0028319 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 24768
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 21606
  Number of Partially Routed Nets     = 3162
  Number of Node Overlaps             = 34

Phase 2 Router Initialization | Checksum: 1dffd5308

Time (s): cpu = 00:00:40 ; elapsed = 00:00:27 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: 1dffd5308

Time (s): cpu = 00:00:41 ; elapsed = 00:00:27 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 3 Initial Routing | Checksum: 26a2cdbd5

Time (s): cpu = 00:00:48 ; elapsed = 00:00:31 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 2534
 Number of Nodes with overlaps = 96
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=3.256  | TNS=0.000  | WHS=-0.020 | THS=-0.123 |

Phase 4.1 Global Iteration 0 | Checksum: 195837656

Time (s): cpu = 00:01:16 ; elapsed = 00:00:49 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 4.2 Additional Iteration for Hold
Phase 4.2 Additional Iteration for Hold | Checksum: 1c5e7732f

Time (s): cpu = 00:01:16 ; elapsed = 00:00:49 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 4 Rip-up And Reroute | Checksum: 1c5e7732f

Time (s): cpu = 00:01:16 ; elapsed = 00:00:49 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp

Phase 5.1.1 Update Timing
Phase 5.1.1 Update Timing | Checksum: 138010b9f

Time (s): cpu = 00:01:24 ; elapsed = 00:00:53 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [Route 35-416] Intermediate Timing Summary | WNS=3.256  | TNS=0.000  | WHS=0.011  | THS=0.000  |


Phase 5.1.2 Update Timing
Phase 5.1.2 Update Timing | Checksum: 1da2dc39d

Time (s): cpu = 00:01:30 ; elapsed = 00:00:57 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [Route 35-416] Intermediate Timing Summary | WNS=3.256  | TNS=0.000  | WHS=0.011  | THS=0.000  |

Phase 5.1 Delay CleanUp | Checksum: 1da2dc39d

Time (s): cpu = 00:01:30 ; elapsed = 00:00:57 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 1da2dc39d

Time (s): cpu = 00:01:30 ; elapsed = 00:00:57 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 5 Delay and Skew Optimization | Checksum: 1da2dc39d

Time (s): cpu = 00:01:30 ; elapsed = 00:00:57 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 138dafef8

Time (s): cpu = 00:01:36 ; elapsed = 00:01:01 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [Route 35-416] Intermediate Timing Summary | WNS=3.256  | TNS=0.000  | WHS=0.011  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 1a7372a3b

Time (s): cpu = 00:01:36 ; elapsed = 00:01:01 . Memory (MB): peak = 5044.266 ; gain = 0.000
Phase 6 Post Hold Fix | Checksum: 1a7372a3b

Time (s): cpu = 00:01:36 ; elapsed = 00:01:01 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 1.70492 %
  Global Horizontal Routing Utilization  = 2.07205 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 1f1fea194

Time (s): cpu = 00:01:37 ; elapsed = 00:01:01 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 1f1fea194

Time (s): cpu = 00:01:37 ; elapsed = 00:01:01 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 1f1fea194

Time (s): cpu = 00:01:39 ; elapsed = 00:01:04 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 10 Resolve XTalk
Phase 10 Resolve XTalk | Checksum: 1f1fea194

Time (s): cpu = 00:01:39 ; elapsed = 00:01:04 . Memory (MB): peak = 5044.266 ; gain = 0.000

Phase 11 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=3.256  | TNS=0.000  | WHS=0.011  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 11 Post Router Timing | Checksum: 1f1fea194

Time (s): cpu = 00:01:42 ; elapsed = 00:01:06 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:01:43 ; elapsed = 00:01:06 . Memory (MB): peak = 5044.266 ; gain = 0.000

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
113 Infos, 0 Warnings, 32 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:01:56 ; elapsed = 00:01:13 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:14 ; elapsed = 00:00:05 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:21 ; elapsed = 00:00:13 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file C:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:23 ; elapsed = 00:00:12 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Vivado_Tcl 2-1520] The results of Report Methodology are in file C:/Users/zhengzb/Desktop/project/kv260/lenet_kv260/lenet_kv260.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:17 ; elapsed = 00:00:10 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
125 Infos, 0 Warnings, 32 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:24 ; elapsed = 00:00:14 . Memory (MB): peak = 5044.266 ; gain = 0.000
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -report_unconstrained -file design_1_wrapper_timing_summary_routed.rpt -pb design_1_wrapper_timing_summary_routed.pb -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -2LV, Temperature grade: C, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file design_1_wrapper_bus_skew_routed.rpt -pb design_1_wrapper_bus_skew_routed.pb -rpx design_1_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -2LV, Temperature grade: C, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xck26'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xck26'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg input design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
INFO: [Common 17-14] Message 'DRC DPIP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[0].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[1].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[2].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[3].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[4].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult0/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult1/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult2/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult3/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult4/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult5/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult6/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult7/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[7].inst_ConvPE/multMatrix0/mult8/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[0].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[0].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[1].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[1].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[2].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[2].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[3].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[3].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[4].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[4].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[5].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[5].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[6].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[6].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[7].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg multiplier stage design_1_i/Accelerator_0/inst/inst_FC_layer/inst_multiplier_list/multiplier_list_1[7].mult/mult/U0/i_mult/gDSP.gDSP_only.iDSP/inferred_dsp.reg_mult.m_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A1' of cell design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O5=(A3)+((~A3)*(~A5)*A4)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A1' of cell design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O5=(A3)+((~A3)*(~A2)*A4)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A1' of cell design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O5=(A3)+((~A3)*(~A5)*A4)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[0]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[0]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[0]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[10]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[10]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[10]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[11]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[11]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[11]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[12]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[12]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[12]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[13]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[13]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[13]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[14]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[14]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[14]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[15]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[15]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[15]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[16]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[16]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[16]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[17]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[17]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[17]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[18]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[18]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[18]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[19]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[19]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[19]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[1]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[1]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[1]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[20]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[20]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[20]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[21]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[21]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[21]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[22]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[22]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[22]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[23]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[23]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[23]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[24]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[24]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[24]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[25]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[25]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[25]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[26]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[26]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[26]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[27]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[27]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[27]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[28]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[28]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[28]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[29]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[29]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[29]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[2]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[2]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[2]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[30]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[30]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[30]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[31]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[31]_i_3/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[31]_i_3. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[3]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[3]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[3]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[4]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[4]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[4]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[5]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[5]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[5]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[6]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[6]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[6]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[7]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[7]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[7]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[8]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[8]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[8]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/DMA_Controller_0/inst/inst_Controller/slv_reg3_reg[9]_0 is a gated clock net sourced by a combinational pin design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[9]_i_2/O, cell design_1_i/DMA_Controller_0/inst/inst_Controller/Read_BASE_ADDR[9]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC REQP-1857] RAMB18E2_writefirst_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_fifo_FClayer/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with WRITE_FIRST write-mode. It is strongly suggested to change this mode to NO_CHANGE for best power characteristics. However, both WRITE_FIRST and NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1857] RAMB18E2_writefirst_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/DMA_Controller_0/inst/inst_OutputFIFO/dout_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with WRITE_FIRST write-mode. It is strongly suggested to change this mode to NO_CHANGE for best power characteristics. However, both WRITE_FIRST and NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[0].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[10].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[11].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[12].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[13].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[14].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[15].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[1].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[2].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[3].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[4].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[5].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[6].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[7].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[8].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1934] RAMB18E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_FC_layer/inst_FClayer_buffer/fclayer_buffer_1[9].inst_bram_layer2_1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1935] RAMB36E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Layer_buffer/bram_layer1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC REQP-1935] RAMB36E2_nochange_collision_advisory: Synchronous clocking is detected for BRAM (design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Layer_buffer/bram_layer1/U0/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[1].ram.r/prim_noinit.ram/DEVICE_8SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram) in SDP mode with NO_CHANGE write-mode. This is the preferred mode for best power characteristics. However, NO_CHANGE may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
WARNING: [DRC RTSTAT-10] No routable loads: 111 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg[2:0], design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg[2:0], design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg[2:0], design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.wr_rst_reg[2:0], design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.wr_rst_reg[2:0], design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.wr_rst_reg[2:0], design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[5].inst_ConvPE/Data_Correct0/fifo0/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[6].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_Relu_MaxPooling_list/relu_pooling[7].inst_Relu_MaxPooling/inst_dataCorrect/fifo0/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/DMA_Controller_0/inst/inst_OutputFIFO/dout_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/Accelerator_0/inst/inst_Conv_layer/inst_ConvPE_list/conv_pe[6].inst_ConvPE/Data_Correct0/fifo0/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/DMA_Controller_0/inst/inst_dataFIFO/din_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb... and (the first 15 of 99 listed).
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 296 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-1876] WebTalk data collection is mandatory when using a ULT device. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-83] Releasing license: Implementation
13 Infos, 236 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:37 ; elapsed = 00:00:29 . Memory (MB): peak = 5148.531 ; gain = 104.266
INFO: [Common 17-206] Exiting Vivado at Sun Jul 14 23:31:13 2024...
